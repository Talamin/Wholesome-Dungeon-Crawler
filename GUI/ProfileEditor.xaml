<Controls:MetroWindow x:Class="WholesomeDungeonCrawler.GUI.ProfileEditor"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:WholesomeDungeonCrawler.GUI"
                xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                mc:Ignorable="d" 
                MaxWidth="500" 
                Background="#FF252525"                 
                GlowBrush="Black"
                BorderThickness="0" 
                ResizeMode="NoResize"
                WindowStartupLocation="CenterScreen"
                ShowIconOnTitleBar="True"
                TitleCaps="False"
                FontFamily="Trebuchet MS"
                Title="Profile Editor" SizeToContent="WidthAndHeight">
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- ControlsApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/WholesomeDungeonCrawler;component/GUI/Theme.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.WindowTitleBrush>
        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
            <GradientStop Color="#FF34e89e" Offset="0"/>
            <GradientStop Color="#FF0f3443" Offset="1"/>
        </LinearGradientBrush>
    </Controls:MetroWindow.WindowTitleBrush>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button x:Name="btnNewProfile" Content="New" Click="btnNewProfile_Click" />
            <Button x:Name="btnLoadProfile" Content="Load" Click="btnLoadProfile_Click" />
            <Button x:Name="btnSaveProfile" Content="Save" Click="btnSaveProfile_Click" />
            <Button x:Name="btnToggleOverlay" Content="Toggle Overlay" Click="btnToggleOverlay_Click" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.Resources>
            <local:VisibilityConverter x:Key="VisibilityConverter"/>
            <local:TypeConverter x:Key="TypeConverter"/>
            <local:ComboboxConverter x:Key="ComboboxConverter"/>
        </Grid.Resources>
        <Controls:MetroAnimatedTabControl Controls:TabControlHelper.Underlined="SelectedTabItem">
            <Controls:MetroAnimatedTabControl.Resources>
                <Style TargetType="{x:Type Controls:MetroTabItem}" BasedOn="{StaticResource {x:Type Controls:MetroTabItem}}">
                    <Setter Property="Controls:ControlsHelper.HeaderFontSize" Value="14" />
                    <Setter Property="Controls:ControlsHelper.HeaderFontWeight" Value="Bold" />
                </Style>
            </Controls:MetroAnimatedTabControl.Resources>
            <!-- Steps tab -->
            <Controls:MetroTabItem Header="Steps">
                <StackPanel Margin="5" >

                    <GroupBox Header="Profile Details" BorderBrush="{x:Null}">
                        <GroupBox.Background>
                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                <GradientStop Color="#FF34e89e" Offset="0"/>
                                <GradientStop Color="#FF0f3443" Offset="1"/>
                            </LinearGradientBrush>
                        </GroupBox.Background>
                        <StackPanel>
                            <TextBox x:Name="txtProfileName" Controls:TextBoxHelper.Watermark="Profile Name" Controls:TextBoxHelper.UseFloatingWatermark="True" Margin="5" BorderBrush="{x:Null}" Text="{Binding CurrentProfile.ProfileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <ComboBox x:Name="cbDungeon" Margin="5" Controls:TextBoxHelper.UseFloatingWatermark="True" SelectedValue="{Binding CurrentProfile.DungeonName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="cbDungeon_SelectionChanged"
                                      Controls:TextBoxHelper.Watermark="Dungeon" />
                            <DataGrid x:Name="dgProfileSteps" Margin="5" AutoGenerateColumns="False" IsReadOnly="True" MaxHeight="150" SelectionChanged="dgProfileSteps_SelectionChanged">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Step Name" Binding="{Binding Name}" />
                                    <DataGridTextColumn Header="Step Type" Binding="{Binding Converter={StaticResource TypeConverter}}" />
                                </DataGrid.Columns>
                            </DataGrid>
                            <StackPanel Orientation="Horizontal"  Margin="5">
                                <Button x:Name="btnAddStep" Content="Add" Margin="0 0 5 0" Click="btnAddStep_Click" >
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem x:Name="miMoveAlongPathStep" Header="Move along path" Click="miMoveAlongPathStep_Click" />
                                            <MenuItem x:Name="miInteractWithStep" Header="Interact with" Click="miInteractWithStep_Click" />
                                            <!--<MenuItem x:Name="miGoToStep" Header="GoToStep" Click="miGoToStep_Click" />-->
                                            <MenuItem x:Name="miTalkToUnitStep" Header="Talk to unit" Click="miTalkToUnitStep_Click" />
                                            <MenuItem x:Name="miDefendSpotStep" Header="Defend spot" Click="miDefendSpotStep_Click" />
                                            <MenuItem x:Name="miVioletHoldStep" Header="Defend Violet Hold spot" Click="miDefendVioletHoldStep_Click" />
                                            <MenuItem x:Name="miFollowUnitStep" Header="Follow and defend unit" Click="miFollowUnitStep_Click" />
                                            <MenuItem x:Name="regroupStep" Header="Regroup" Click="regroupStep_Click" />
                                            <MenuItem x:Name="jumpToStep" Header="Jump to step" Click="jumpToStep_Click" />
                                            <MenuItem x:Name="miLeaveDungeonStep" Header="Leave dungeon" Click="miLeaveDungeonStep_Click" />
                                            <MenuItem x:Name="miPullToSafeSpotStep" Header="Pull to safe spot" Click="miPullToSafeSpotStep_Click" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button x:Name="btnDeleteStep" Content="Delete" Margin="0 0 5 0" Click="btnDeleteStep_Click" />
                                <Button x:Name="btnMoveStepUp" Content="Move Up" Margin="0 0 5 0" Click="btnMoveStepUp_Click"  />
                                <Button x:Name="btnMoveStepDown" Content="Move Down" Margin="0 0 5 0" Click="btnMoveStepDown_Click" />
                            </StackPanel>

                        </StackPanel>
                    </GroupBox>
                    <StackPanel Margin="5">
                        <local:ProfileStep x:Name="psControl" Visibility="{Binding SelectedItem, Converter={StaticResource VisibilityConverter}, ElementName=dgProfileSteps}"/>
                    </StackPanel>
                </StackPanel>
            </Controls:MetroTabItem>

            <!-- Deathruns tab -->
            <Controls:MetroTabItem Header="Deathruns" Visibility="{Binding SelectedIndex, Converter={StaticResource ComboboxConverter}, ElementName=cbDungeon}" >
                <StackPanel Margin="5">
                    <DataGrid x:Name="deathRunsList" Margin="5" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" MaxHeight="300" SelectionChanged="deathRunsList_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Horizontal"  Margin="5">
                        <Button x:Name="btnAddNewDeathrun" Content="Add" Margin="0 0 5 0" Click="btnAddNewDeathrun_Click"/>
                        <Button x:Name="btnDeleteDeathrun" Content="Delete" Margin="0 0 5 0" Click="btnDeleteDeathrun_Click"/>
                    </StackPanel>
                    <GroupBox x:Name="gbDeathruns" Header="Deathruns" BorderBrush="{x:Null}" Margin="10" Visibility="{Binding ElementName=deathRunsList, Path=SelectedItem, Converter={StaticResource VisibilityConverter}}">
                        <GroupBox.Background>
                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                <GradientStop Color="#FF34e89e" Offset="0"/>
                                <GradientStop Color="#FF0f3443" Offset="1"/>
                            </LinearGradientBrush>
                        </GroupBox.Background>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBox Controls:TextBoxHelper.Watermark="Deathrun Name" Controls:TextBoxHelper.UseFloatingWatermark="True" Margin="5" BorderBrush="{x:Null}" Text="{Binding ElementName=deathRunsList, Path=SelectedItem.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                            <DataGrid x:Name="dgSelectedDeathrun" Margin="5" IsReadOnly="True" MaxHeight="300" />
                            <StackPanel Orientation="Horizontal"  Margin="5">
                                <Button x:Name="btnAddDeathRunVector" Content="Add" Margin="0 0 5 0" Click="btnAddDeathRunVector_Click"/>
                                <Button x:Name="btnDeleteDeathRunVector" Content="Delete" Margin="0 0 5 0" Click="btnDeleteDeathRunVector_Click"/>
                                <Controls:ToggleSwitch x:Name="chkRecordDeathRunPath" OnLabel="Record Path" OffLabel="Record Path" IsChecked="False"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </Controls:MetroTabItem>
                <!--
            <Controls:MetroTabItem Header="Deathruns" Visibility="{Binding SelectedIndex, Converter={StaticResource ComboboxConverter}, ElementName=cbDungeon}" >
                <StackPanel Margin="5" >
                    <GroupBox x:Name="gbDeathRun" Header="Death run paths" BorderBrush="{x:Null}">
                        <GroupBox.Background>
                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                <GradientStop Color="#FF34e89e" Offset="0"/>
                                <GradientStop Color="#FF0f3443" Offset="1"/>
                            </LinearGradientBrush>
                        </GroupBox.Background>
                        
                        <StackPanel>
                            <StackPanel>
                                <DataGrid x:Name="dgDeathrun" Margin="5" CanUserAddRows="False" IsReadOnly="True" MaxHeight="300"/>
                                <StackPanel Orientation="Horizontal"  Margin="5">
                                    <Button x:Name="btnAddDeathRunVector" Content="Add" Margin="0 5 5 5" Click="btnAddDeathRunVector_Click" />
                                    <Button x:Name="btnDeleteDeathRunVector" Content="Delete" Margin="0 5 5 5" Click="btnDeleteDeathRunVector_Click"  />
                                    <Controls:ToggleSwitch x:Name="chkRecordDeathRunPath" OnLabel="Record Path" OffLabel="Record Path" IsChecked="False"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </Controls:MetroTabItem>
            -->
            <!-- Offmesh connections tab -->
            <Controls:MetroTabItem Header="Offmesh Connections" Visibility="{Binding SelectedIndex, Converter={StaticResource ComboboxConverter}, ElementName=cbDungeon}">
                <StackPanel Margin="5">
                    <DataGrid x:Name="dgOffmeshList" Margin="5" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" MaxHeight="300" SelectionChanged="dgOffmeshList_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Horizontal"  Margin="5">
                        <Button x:Name="btnOcAdd" Content="Add" Margin="0 0 5 0" Click="btnOcAdd_Click"/>
                        <Button x:Name="btnOcDelete" Content="Delete" Margin="0 0 5 0" Click="btnOcDelete_Click"/>
                    </StackPanel>
                    <GroupBox x:Name="gbOffmeshConnection" Header="Offmesh Connection" BorderBrush="{x:Null}" Margin="10" Visibility="{Binding ElementName=dgOffmeshList, Path=SelectedItem, Converter={StaticResource VisibilityConverter}}">
                        <GroupBox.Background>
                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                <GradientStop Color="#FF34e89e" Offset="0"/>
                                <GradientStop Color="#FF0f3443" Offset="1"/>
                            </LinearGradientBrush>
                        </GroupBox.Background>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBox Controls:TextBoxHelper.Watermark="Offmesh Name" Controls:TextBoxHelper.UseFloatingWatermark="True" Margin="5" BorderBrush="{x:Null}" Text="{Binding ElementName=dgOffmeshList,Path=SelectedItem.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <ComboBox x:Name="cbOffMeshDirection" Controls:TextBoxHelper.UseFloatingWatermark="True"
                                          Controls:TextBoxHelper.Watermark="Direction"
                                          SelectedItem="{Binding ElementName=dgOffmeshList,Path=SelectedItem.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Margin="5"/>
                                <TextBox Controls:TextBoxHelper.Watermark="Continent ID" Controls:TextBoxHelper.UseFloatingWatermark="True" Margin="5" BorderBrush="{x:Null}" Text="{Binding ElementName=dgOffmeshList,Path=SelectedItem.ContinentId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                            <DataGrid x:Name="dgOffmeshPath" Margin="5" IsReadOnly="True" MaxHeight="300" />
                            <StackPanel Orientation="Horizontal"  Margin="5">
                                <Button x:Name="btnOCPAdd" Content="Add" Margin="0 0 5 0" Click="btnOCPAdd_Click"/>
                                <Button x:Name="btnOCPDelete" Content="Delete" Margin="0 0 5 0" Click="btnOCPDelete_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </Controls:MetroTabItem>
        </Controls:MetroAnimatedTabControl>
        
    </Grid>
</Controls:MetroWindow>
